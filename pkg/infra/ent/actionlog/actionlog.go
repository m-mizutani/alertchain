// Code generated by entc, DO NOT EDIT.

package actionlog

import (
	"github.com/m-mizutani/alertchain/types"
)

const (
	// Label holds the string label denoting the actionlog type in the database.
	Label = "action_log"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldStartedAt holds the string denoting the started_at field in the database.
	FieldStartedAt = "started_at"
	// FieldExitedAt holds the string denoting the exited_at field in the database.
	FieldExitedAt = "exited_at"
	// FieldLog holds the string denoting the log field in the database.
	FieldLog = "log"
	// FieldErrmsg holds the string denoting the errmsg field in the database.
	FieldErrmsg = "errmsg"
	// FieldErrValues holds the string denoting the err_values field in the database.
	FieldErrValues = "err_values"
	// FieldStackTrace holds the string denoting the stack_trace field in the database.
	FieldStackTrace = "stack_trace"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// EdgeArgument holds the string denoting the argument edge name in mutations.
	EdgeArgument = "argument"
	// Table holds the table name of the actionlog in the database.
	Table = "action_logs"
	// ArgumentTable is the table that holds the argument relation/edge.
	ArgumentTable = "attributes"
	// ArgumentInverseTable is the table name for the Attribute entity.
	// It exists in this package in order to avoid circular dependency with the "attribute" package.
	ArgumentInverseTable = "attributes"
	// ArgumentColumn is the table column denoting the argument relation/edge.
	ArgumentColumn = "action_log_argument"
)

// Columns holds all SQL columns for actionlog fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldStartedAt,
	FieldExitedAt,
	FieldLog,
	FieldErrmsg,
	FieldErrValues,
	FieldStackTrace,
	FieldStatus,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus types.TaskStatus
)
